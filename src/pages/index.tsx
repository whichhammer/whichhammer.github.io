import Head from "next/head";
import React, { useState } from 'react';
import type { GetServerSideProps } from "next";
import { ModelProps } from "../components/Model";
import prisma from '../lib/prisma'
import { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis } from 'recharts';
import { RadarData } from "@/lib/view/RadarData";
import { Typeahead } from 'react-bootstrap-typeahead';
import 'react-bootstrap-typeahead/css/Typeahead.css';
import 'react-bootstrap-typeahead/css/Typeahead.bs5.css';

export const getServerSideProps: GetServerSideProps = async () => {
  const feed = await prisma.datasheet_model.findMany({
    orderBy: [
      {
        name: 'asc',
      },
    ]
  });
  return {
    props: {
      feed: feed,
      fillColour: ['red', 'blue', 'green', 'yellow', 'orange', 'purple', 'pink', 'brown', 'grey', 'black', 'white'],
      strokeColour: ['darkred', 'darkblue', 'darkgreen', 'darkyellow', 'darkorange', 'darkpurple', 'darkpink', 'darkbrown', 'darkgrey', 'darkblack', 'darkwhite'],
    }
  };
};

type Props = {
  feed: ModelProps[];
  fillColour: string[];
  strokeColour: string[];
};

const Home: React.FC<Props> = (props) => {
  const radarData = new RadarData();
  const options: ModelProps[] = props.feed;
  // props.feed.forEach((model) => {
  //   radarData.addModel(model);
  // });

  const data = radarData.getViewData();
  const maxFullMark = radarData.getMaxFullMark();

  const [multiSelections, setMultiSelections] = useState([]);

  if (multiSelections.length > 0) {
    radarData.setModels(multiSelections);
  }

  return (
    <>
      <Head>
        <title>Whichhammer?</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>

        <Typeahead
          id="basic-typeahead-multiple"
          labelKey="name"
          multiple
          onChange={(s) => {
            // @ts-ignore
            setMultiSelections(s);
          }}
          options={options}
          placeholder="Choose several models..."
          selected={multiSelections}
        />

        <RadarChart cx={300} cy={250} width={800} height={500} data={radarData.getViewData()}>
          <PolarGrid />
          <PolarAngleAxis dataKey="subject" />
          {radarData.getViewData().map((entry, idx) => (
            <PolarRadiusAxis
              angle={(idx * 40) - 270}
              domain={[0, 'dataMax']}
              type='number'
              tickCount={radarData.getMaxFullMark()}
            />
          ))}
          {radarData.getModels().map((model, idx) => (
            <Radar dot={true} label={true} name={model.name} dataKey={model.id} stroke={props.strokeColour[idx]} fill={props.fillColour[idx]} fillOpacity={0.2} />
          ))}
          <Legend />
        </RadarChart>

      </main>
    </>
  )
}

export default Home;
